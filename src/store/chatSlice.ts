// src/store/chatSlice.ts
// Creado por Bernard Orozco
import { createSlice, PayloadAction } from '@reduxjs/toolkit'

interface ChatState {
  messages: Array<{
    role: 'user' | 'assistant'
    content: string
  }>
  isLoading: boolean
  error: string | null
}

const initialState: ChatState = {
  messages: [
    {
      role: 'assistant',
      content: `## üè• Sistema Cognitivo M√©dico AI - Listo para An√°lisis

¬°Bienvenido, doctor! Soy su asistente de IA m√©dica avanzada con capacidades cognitivas multi-agente.

### üéØ **C√≥mo funciono:**
- **An√°lisis Diagn√≥stico**: Evaluaciones diferenciales basadas en evidencia
- **Clasificaci√≥n de Urgencia**: Triage ESI automatizado  
- **Validaci√≥n Cl√≠nica**: Revisi√≥n de seguridad y calidad
- **Planes de Tratamiento**: Recomendaciones terap√©uticas
- **Documentaci√≥n SOAP**: Notas m√©dicas estructuradas

### üí¨ **Para comenzar:**
Describa el caso cl√≠nico completo: s√≠ntomas, antecedentes, examen f√≠sico, y cualquier informaci√≥n relevante del paciente.

**Ejemplo**: *"Paciente femenina de 32 a√±os presenta cefalea puls√°til de 2 d√≠as de duraci√≥n, asociada a n√°useas y fotofobia. Sin fiebre. Antecedente de migra√±as ocasionales..."*

üöÄ **Estoy listo para procesar su consulta m√©dica con an√°lisis cognitivo avanzado.**`
    }
  ],
  isLoading: false,
  error: null
}

const chatSlice = createSlice({
  name: 'chat',
  initialState,
  reducers: {
    addUserMessage: (state, action: PayloadAction<string>) => {
      state.messages.push({
        role: 'user',
        content: action.payload
      })
      state.isLoading = true
      state.error = null
    },
    addAssistantMessage: (state, action: PayloadAction<string>) => {
      state.messages.push({
        role: 'assistant',
        content: action.payload
      })
      state.isLoading = false
    },
    setError: (state, action: PayloadAction<string>) => {
      state.error = action.payload
      state.isLoading = false
    },
    clearChat: (state) => {
      state.messages = []
      state.error = null
    }
  }
})

export const { addUserMessage, addAssistantMessage, setError, clearChat } = chatSlice.actions
export default chatSlice.reducer