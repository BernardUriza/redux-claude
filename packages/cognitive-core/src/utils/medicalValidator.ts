// Validador de Contenido M√©dico - Creado por Bernard Orozco

export interface MedicalValidationResult {
  isValid: boolean
  confidence: number
  rejectionReason?: string
  suggestedFormat?: string
}

export class MedicalContentValidator {
  
  // T√©rminos m√©dicos y cl√≠nicos clave
  private readonly medicalTerms = [
    // S√≠ntomas generales
    'dolor', 'fiebre', 'n√°useas', 'v√≥mitos', 'diarrea', 'estre√±imiento', 'cefalea', 'mareo',
    'fatiga', 'astenia', 'anorexia', 'p√©rdida', 'peso', 'sudoraci√≥n', 'escalofr√≠os',
    
    // T√©rminos cl√≠nicos
    'paciente', 's√≠ntomas', 'diagn√≥stico', 'tratamiento', 'medicamento', 'dosis',
    'antecedentes', 'historia', 'cl√≠nica', 'examen', 'f√≠sico', 'laboratorios',
    
    // Especialidades m√©dicas
    'cardiolog√≠a', 'neurolog√≠a', 'psiquiatr√≠a', 'dermatolog√≠a', 'gastroenterolog√≠a',
    'medicina', 'pediatr√≠a', 'ginecolog√≠a', 'urolog√≠a', 'oftalmolog√≠a',
    
    // T√©rminos anat√≥micos
    'coraz√≥n', 'pulm√≥n', 'h√≠gado', 'ri√±√≥n', 'cerebro', 'est√≥mago', 'intestino',
    'piel', 'hueso', 'm√∫sculo', 'sangre', 'presi√≥n', 'arterial',
    
    // Psicol√≥gicos/Psiqui√°tricos
    'depresi√≥n', 'ansiedad', 'estr√©s', 'insomnio', 'trastorno', 'estado', '√°nimo',
    'psicol√≥gico', 'emocional', 'mental', 'comportamiento', 'conducta',
    
    // Temporales m√©dicos
    'a√±os', 'meses', 'd√≠as', 'horas', 'cr√≥nico', 'agudo', 'recurrente', 'episodio',
    
    // Ex√°menes y procedimientos
    'rayos', 'tomograf√≠a', 'resonancia', 'ecograf√≠a', 'biopsia', 'an√°lisis',
    'hemograma', 'glucosa', 'colesterol', 'presi√≥n', 'temperatura'
  ]

  // Patrones de casos cl√≠nicos v√°lidos
  private readonly medicalPatterns = [
    /paciente\s+(masculino|femenino|de|con|presenta)/i,
    /a√±os?\s+(presenta|refiere|acude|consulta)/i,
    /historia\s+de/i,
    /antecedentes?\s+(de|m√©dicos?|familiares?)/i,
    /s√≠ntomas?\s+(de|como|incluyen?)/i,
    /dolor\s+(en|de|abdominal|tor√°cico|cef√°lico)/i,
    /presenta?\s+(cuadro|sintomatolog√≠a|cl√≠nica)/i,
    /diagn√≥stico\s+(de|diferencial|principal)/i,
    /tratamiento\s+(con|de|farmacol√≥gico)/i,
    /examen\s+f√≠sico/i,
    /signos?\s+vitales?/i,
    /laboratorios?\s+(muestran?|revelan?|reportan?)/i
  ]

  // Patrones que NO son m√©dicos
  private readonly nonMedicalPatterns = [
    /hola|hello|buenos?\s+d√≠as?|buenas?\s+tardes?/i,
    /c√≥mo\s+est√°s?|how\s+are\s+you/i,
    /qu√©\s+tal|what\'?s\s+up/i,
    /programaci√≥n|c√≥digo|software|javascript|python/i,
    /matem√°ticas?|c√°lculo|algebra|geometr√≠a/i,
    /recetas?\s+de\s+cocina|ingredientes?|comida/i,
    /deportes?|f√∫tbol|b√°squet|tenis/i,
    /clima|tiempo|lluvia|sol/i,
    /pol√≠tica|gobierno|elecciones?/i,
    /entretenimiento|m√∫sica|pel√≠culas?|series?/i,
    /viajes?|turismo|vacaciones?/i,
    /tecnolog√≠a\s+(no\s+m√©dica)|gadgets?|tel√©fonos?/i
  ]

  /**
   * Valida si el texto ingresado corresponde a un caso cl√≠nico o consulta m√©dica
   */
  public validateMedicalContent(text: string): MedicalValidationResult {
    const cleanText = text.toLowerCase().trim()
    
    if (cleanText.length < 10) {
      return {
        isValid: false,
        confidence: 0.9,
        rejectionReason: 'input_too_short',
        suggestedFormat: 'Proporciona m√°s detalles del caso cl√≠nico'
      }
    }

    // Verificar patrones expl√≠citamente no m√©dicos
    const nonMedicalMatches = this.nonMedicalPatterns.filter(pattern => pattern.test(cleanText))
    if (nonMedicalMatches.length > 0) {
      return {
        isValid: false,
        confidence: 0.95,
        rejectionReason: 'non_medical_content',
        suggestedFormat: 'Este sistema est√° dise√±ado exclusivamente para an√°lisis de casos cl√≠nicos'
      }
    }

    // Verificar patrones m√©dicos estructurados
    const medicalPatternMatches = this.medicalPatterns.filter(pattern => pattern.test(cleanText))
    const medicalTermMatches = this.medicalTerms.filter(term => cleanText.includes(term))

    // Calcular puntuaci√≥n
    let score = 0
    
    // Peso alto para patrones m√©dicos estructurados
    score += medicalPatternMatches.length * 25
    
    // Peso medio para t√©rminos m√©dicos
    score += medicalTermMatches.length * 5
    
    // Bonificaci√≥n por estructura de caso cl√≠nico
    if (this.hasClinicStructure(cleanText)) {
      score += 30
    }

    // Penalizaci√≥n por falta de contexto m√©dico
    if (!this.hasAgeGenderContext(cleanText)) {
      score -= 15
    }

    const confidence = Math.min(score / 100, 0.98)

    if (confidence < 0.4) {
      return {
        isValid: false,
        confidence: 1 - confidence,
        rejectionReason: 'insufficient_medical_context',
        suggestedFormat: 'Incluye: edad, g√©nero, s√≠ntomas principales, duraci√≥n, antecedentes relevantes'
      }
    }

    return {
      isValid: true,
      confidence
    }
  }

  /**
   * Verifica si el texto tiene estructura de caso cl√≠nico
   */
  private hasClinicStructure(text: string): boolean {
    const structureIndicators = [
      /(a√±os?|edad)/i,
      /(presenta|refiere|acude|consulta)/i,
      /(s√≠ntomas?|dolor|molestias?)/i,
      /(desde|hace|durante)/i,
      /(antecedentes?|historia)/i
    ]

    return structureIndicators.filter(pattern => pattern.test(text)).length >= 3
  }

  /**
   * Verifica si incluye contexto de edad y g√©nero
   */
  private hasAgeGenderContext(text: string): boolean {
    const agePattern = /\d+\s*a√±os?/i
    const genderPattern = /(masculino|femenino|hombre|mujer|var√≥n|paciente\s+(de|con))/i
    
    return agePattern.test(text) || genderPattern.test(text)
  }

  /**
   * Genera mensaje de rechazo apropiado
   */
  public generateRejectionMessage(result: MedicalValidationResult): string {
    const baseMessage = "## ‚ö†Ô∏è Consulta No V√°lida\n\n"
    
    switch (result.rejectionReason) {
      case 'input_too_short':
        return baseMessage + `**Informaci√≥n insuficiente**

Por favor, proporciona un caso cl√≠nico m√°s detallado que incluya:

üìã **Formato recomendado:**
- **Paciente:** Edad, g√©nero
- **Motivo de consulta:** S√≠ntoma principal
- **Historia actual:** Duraci√≥n, caracter√≠sticas, evoluci√≥n
- **Antecedentes:** M√©dicos, familiares, medicamentos
- **Examen f√≠sico:** Hallazgos relevantes (si disponible)

**Ejemplo:** *"Paciente masculino de 45 a√±os presenta dolor tor√°cico opresivo de 2 horas de evoluci√≥n, irradiado a brazo izquierdo. Antecedente de hipertensi√≥n arterial..."*`

      case 'non_medical_content':
        return baseMessage + `**Fuera del dominio m√©dico**

Este sistema est√° especializado exclusivamente en:
- üè• **An√°lisis de casos cl√≠nicos**
- üíä **Consultas m√©dicas y diagn√≥sticos**
- üß† **Evaluaciones psicol√≥gicas y psiqui√°tricas**

No puedo ayudar con temas fuera del √°mbito m√©dico-psicol√≥gico.

Por favor, reformula tu consulta como un caso cl√≠nico espec√≠fico.`

      case 'insufficient_medical_context':
        return baseMessage + `**Requiere m√°s contexto m√©dico**

Para realizar un an√°lisis cl√≠nico apropiado, necesito informaci√≥n espec√≠fica del paciente.

üìù **Incluye en tu consulta:**
1. **Datos demogr√°ficos:** Edad, g√©nero
2. **S√≠ntomas principales:** Qu√© presenta el paciente
3. **Cronolog√≠a:** Cu√°ndo comenz√≥, evoluci√≥n
4. **Antecedentes:** M√©dicos relevantes
5. **Contexto:** Circunstancias asociadas

**Reformula tu consulta con estos elementos para obtener un an√°lisis m√©dico completo.**`

      default:
        return baseMessage + `**Consulta no reconocida como caso cl√≠nico**

${result.suggestedFormat}

Por favor, estructura tu consulta como un caso m√©dico espec√≠fico.`
    }
  }
}